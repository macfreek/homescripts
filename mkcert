#! /bin/sh
#
# mkcert, based on mkimpadcert and apache2-ssl-certificate
# 
# Generates one self-signed certificate for both apache and imapd to use
# 
# mkimapdcert is Copyright 2000 Double Precision, Inc., and is distributed 
# under the GPL version 2, with provisioning that it is allowed to link 
# against OpenSSL.
#
# This is a short script to quickly generate a self-signed X.509 key for
# IMAP over SSL.  Normally this script would get called by an automatic
# package installation routine.

if [ ! -x /usr/bin/openssl ]; then
	echo "openssl not installed"
	exit 0
fi

prefix="/etc/ssl"
config=$prefix/server.cnf

randfile=$prefix/serverdh.rand
certfile=$prefix/servercert.pem
keyfile=$prefix/serverkey.pem
dhfile=$prefix/serverdh.pem
apachefile=/etc/apache2/ssl/apache.pem
imapfile=/etc/courier/imapd.pem

# generate random data (used for Diffie-Hellman + cert)
dd if=/dev/urandom of=$randfile count=1 2>/dev/null
# generate RSA keys and self-signed certificate
/usr/bin/openssl req -new -x509 -days 365 -nodes -config $config -out $certfile -keyout $keyfile
# generate Diffie-Hellman parameters
/usr/bin/openssl dhparam -rand $randfile 512 >> $dhfile
rm -f $randfile

# generate combines key and certificate files for apache and imap
# This is basically done by concatenating the required information.
# To be honest, I do not know if the Diffie-Hellman stuff is really needed for imap, 
# but this is what mkimapdcert does, and I just copied that.
cat $certfile $keyfile > $apachefile
cat $certfile $keyfile $dhfile > $imapfile

# Set permissions correctly
chmod 644 $certfile
chmod 600 $keyfile
chmod 600 $dhfile
chmod 600 $apachefile
chmod 600 $imapfile
#chown daemon $imapfile

# create hash symlink
cd `dirname $apachefile`
ln -sf `basename $apachefile` `openssl x509 -hash -noout -in $apachefile`.0

# print base certificate information
/usr/bin/openssl x509 -subject -dates -fingerprint -noout -in $certfile
